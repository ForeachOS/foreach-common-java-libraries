package com.foreach.spring.localization.text;

import com.foreach.spring.localization.AbstractLocalizedFieldsObject;
import com.foreach.spring.localization.Language;

import java.util.Date;

public class LocalizedText extends AbstractLocalizedFieldsObject<LocalizedTextFields>
{
	private String application, group, label;
	private boolean used, autoGenerated;
	private Date created = new Date(), updated;

	public final String getGroup()
	{
		return group;
	}

	public final void setGroup( String group )
	{
		this.group = group;
	}

	public final String getLabel()
	{
		return label;
	}

	public final void setLabel( String label )
	{
		this.label = label;
	}

	public final boolean isUsed()
	{
		return used;
	}

	public final void setUsed( boolean used )
	{
		this.used = used;
	}

	public final String getApplication()
	{
		return application;
	}

	public final void setApplication( String application )
	{
		this.application = application;
	}

	public final boolean isAutoGenerated()
	{
		return autoGenerated;
	}

	public final void setAutoGenerated( boolean autoGenerated )
	{
		this.autoGenerated = autoGenerated;
	}

	public final Date getCreated()
	{
		return created;
	}

	public final void setCreated( Date created )
	{
		this.created = created;
	}

	public final Date getUpdated()
	{
		return updated;
	}

	public final void setUpdated( Date updated )
	{
		this.updated = updated;
	}

	/**
	 * Creates new LocalizedFields of the required specific implementation.  This does not add the fields to
	 * the collection for this entity.
	 *
	 * @param language Language for which to create fields.
	 * @return Specific LocalizedFields implementation.
	 */
	@Override
	public final LocalizedTextFields createFields( Language language )
	{
		return new LocalizedTextFields( language );
	}

	@SuppressWarnings("all")
	@Override
	public boolean equals( Object o )
	{
		if ( this == o ) {
			return true;
		}
		if ( o == null || getClass() != o.getClass() ) {
			return false;
		}

		LocalizedText that = (LocalizedText) o;

		if ( application != null ? !application.equals( that.application ) : that.application != null ) {
			return false;
		}
		if ( group != null ? !group.equals( that.group ) : that.group != null ) {
			return false;
		}
		if ( label != null ? !label.equals( that.label ) : that.label != null ) {
			return false;
		}

		return true;
	}

	@SuppressWarnings("all")
	@Override
	public int hashCode()
	{
		int result = application != null ? application.hashCode() : 0;
		result = 31 * result + ( group != null ? group.hashCode() : 0 );
		result = 31 * result + ( label != null ? label.hashCode() : 0 );
		return result;
	}

	@Override
	public final String toString()
	{
		return "{" + application + "-" + group + ": " + label + "}";
	}
}
