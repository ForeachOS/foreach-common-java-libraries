variables:
  MAVEN_REPO_DIR: $CI_PROJECT_DIR/.m2/repository
  MAVEN_IMAGE: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/maven:3.9-eclipse-temurin-8
  DOCKER_COMPOSE_IMAGE: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker/compose
  MAVEN_OPTS: >-
    -Xmx256m
    -Dhttps.protocols=TLSv1.2
    -Dmaven.repo.local=$MAVEN_REPO_DIR
    -Dorg.slf4j.simpleLogger.showDateTime=true
    -Djava.awt.headless=true

  MAVEN_CLI_OPTS: >-
    --settings=$MVN_SETTINGS
    --batch-mode
    --errors
    --fail-at-end
    --show-version
    --no-transfer-progress
  DOCKER_HOST: "tcp://docker:2375"
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2
  BUILD_VERSION: ${CI_COMMIT_REF_NAME}-${CI_PIPELINE_ID}
  RELEASE_VERSION: ${BUILD_VERSION}

services:
  - name: docker:dind
    command: [ "--tls=false" ]

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

stages:
  - test-build
  - deploy

cache:
  paths:
    - $MAVEN_REPO_DIR

utest:backend:
  stage: test-build
  image: ${MAVEN_IMAGE}
  script:
    - 'mvn $MAVEN_CLI_OPTS verify'
  artifacts:
    when: always
    reports:
      junit:
        - '**/target/surefire-reports/*.xml'

.deploy:
  stage: deploy
  image: ${MAVEN_IMAGE}
  rules:
    - when: always
  needs:
    - utest:backend
  script:
    - 'mvn $MAVEN_CLI_OPTS clean compile deploy -DskipTests=true -Pforeach -Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true -Dmaven.wagon.http.ssl.ignore.validity.dates=true'

deploy:snapshot:
  extends:
    - .deploy
  environment:
    name: snapshot
